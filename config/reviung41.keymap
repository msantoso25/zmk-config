/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RSE  |
// | ALT  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                         | GUI | LWR | BSPC | SPC  | CTRL |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mo 2
   &kp LALT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                        &kp LGUI  &mo 1 &kp BSPC &kp SPACE  &kp RCTRL
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// |  ESC  |      | VOLDN |  UP  | VOLUP |  MUTE  |   |  /  |  7  |  8  |  9  |  )  |  DEL |
// |       |      | LEFT  | DOWN | RIGHT |  ENT   |   |  *  |  4  |  5  |  6  |  `  |  ~   |
// |  SHFT | UNDO | CUT   | COPY | PASTE |  SCRST |   |  -  |  1  |  2  |  3  | PRSC| SHFT |
//                       |     |     | RET | + |  0  |
                        bindings = <
   &kp ESC   &trans  &kp C_VOL_DN  &kp UP    &kp C_VOL_UP &kp C_MUTE     &kp SLASH  &kp N7  &kp N8  &kp N9  &kp RPAR  &kp DEL
   &trans    &trans  &kp LEFT      &kp DOWN  &kp RIGHT    &kp RET        &kp STAR   &kp N4  &kp N5  &kp N6  &kp GRAVE &kp TILDE
   &kp LSHFT &trans  &trans        &trans    &trans       &trans         &kp MINUS  &kp N1  &kp N2  &kp N3  &kp PSCRN &kp RSHFT
                                 &trans      &trans       &kp RET        &kp PLUS       &kp N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                       |     | ADJ | BKSP |    |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans       &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
   &trans  &trans  &trans  &trans  &trans  &trans       &trans    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6
   &trans  &trans  &trans  &trans  &trans  &trans       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                                &trans      &mo 3       &kp BSPC        &trans      &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
                        bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &none        &none
                                                             &trans      &trans       &tog 3        &trans      &trans
                        >;
                };
        };
};
